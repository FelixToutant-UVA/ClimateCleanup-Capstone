/* Grid layout styles */
.row {
  display: flex;
  flex-wrap: wrap;
  margin-right: -$spacing-md;
  margin-left: -$spacing-md;
}

.col {
  flex: 1 0 0;
  padding-right: $spacing-md;
  padding-left: $spacing-md;
}

@for $i from 1 through 12 {
  .col-#{$i} {
    flex: 0 0 calc(#{$i} / 12 * 100%);
    max-width: calc(#{$i} / 12 * 100%);
    padding-right: $spacing-md;
    padding-left: $spacing-md;
  }
  
  .offset-#{$i} {
    margin-left: calc(#{$i} / 12 * 100%);
  }
}

// Responsive grid
@include respond-to(md) {
  @for $i from 1 through 12 {
    .col-md-#{$i} {
      flex: 0 0 calc(#{$i} / 12 * 100%);
      max-width: calc(#{$i} / 12 * 100%);
    }
  }
}

@include respond-to(sm) {
  @for $i from 1 through 12 {
    .col-sm-#{$i} {
      flex: 0 0 calc(#{$i} / 12 * 100%);
      max-width: calc(#{$i} / 12 * 100%);
    }
  }
}

// Grid for specific components
.metrics-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: $spacing-lg;
  
  @include respond-to(md) {
    grid-template-columns: 1fr;
  }
}

.forest-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
  gap: $spacing-xl;
  margin-bottom: $spacing-xl;
  
  @include respond-to(md) {
    grid-template-columns: 1fr;
  }
}

.inventory-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: $spacing-lg;
  padding: $spacing-lg;
  
  @include respond-to(md) {
    grid-template-columns: repeat(2, 1fr);
  }
  
  @include respond-to(sm) {
    grid-template-columns: 1fr;
  }
}
